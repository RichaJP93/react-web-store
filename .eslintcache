[{"C:\\Users\\Joe\\source\\repos\\react-web-store\\src\\index.tsx":"1","C:\\Users\\Joe\\source\\repos\\react-web-store\\src\\App.tsx":"2","C:\\Users\\Joe\\source\\repos\\react-web-store\\src\\App.styles.ts":"3","C:\\Users\\Joe\\source\\repos\\react-web-store\\src\\components\\Item\\Item.tsx":"4","C:\\Users\\Joe\\source\\repos\\react-web-store\\src\\components\\Item\\Item.styles.tsx":"5"},{"size":320,"mtime":1617100504575,"results":"6","hashOfConfig":"7"},{"size":1576,"mtime":1617105313566,"results":"8","hashOfConfig":"7"},{"size":77,"mtime":1617101801815,"results":"9","hashOfConfig":"7"},{"size":583,"mtime":1617105370883,"results":"10","hashOfConfig":"7"},{"size":506,"mtime":1617106953717,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"60lzis",{"filePath":"15","messages":"16","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Joe\\source\\repos\\react-web-store\\src\\index.tsx",[],["24","25"],"C:\\Users\\Joe\\source\\repos\\react-web-store\\src\\App.tsx",["26","27","28","29","30","31"],"import {useState} from 'react';\nimport {useQuery} from 'react-query';\n//Components\nimport Item from './components/Item/Item';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\nimport {Wrapper} from './App.styles';\n\n\n//create type to store items that go into cart with extra amount field\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: string;\n  title: string;\n  amount: number;\n}\n\n//get products from api, 2nd await used to wait for converting to json\n//returns a promise of CartItemType\nconst getProducts = async (): Promise<CartItemType[]> => \n  await (await fetch('https://fakestoreapi.com/products')).json();\n\n\nconst App = () => {\n\n  const {data, isLoading, error} = useQuery<CartItemType[]>(\n    'products', \n    getProducts\n  );\n\n  console.log(data)\n\n  const getTotalItems = () => null;\n\n  const handleAddToCart = (clickedItem: CartItemType) => null;\n\n  const handleRemoveFromCart = () => null;\n\n  if(isLoading) return <LinearProgress />;\n  if(error) return <div>Something went wrong...</div>\n\n  return (\n    <Wrapper>\n      <Grid container spacing={3}>\n        {data?.map(item => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","C:\\Users\\Joe\\source\\repos\\react-web-store\\src\\App.styles.ts",[],"C:\\Users\\Joe\\source\\repos\\react-web-store\\src\\components\\Item\\Item.tsx",[],"C:\\Users\\Joe\\source\\repos\\react-web-store\\src\\components\\Item\\Item.styles.tsx",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":1,"column":9,"nodeType":"38","messageId":"39","endLine":1,"endColumn":17},{"ruleId":"36","severity":1,"message":"40","line":5,"column":8,"nodeType":"38","messageId":"39","endLine":5,"endColumn":14},{"ruleId":"36","severity":1,"message":"41","line":8,"column":8,"nodeType":"38","messageId":"39","endLine":8,"endColumn":27},{"ruleId":"36","severity":1,"message":"42","line":9,"column":8,"nodeType":"38","messageId":"39","endLine":9,"endColumn":13},{"ruleId":"36","severity":1,"message":"43","line":39,"column":9,"nodeType":"38","messageId":"39","endLine":39,"endColumn":22},{"ruleId":"36","severity":1,"message":"44","line":43,"column":9,"nodeType":"38","messageId":"39","endLine":43,"endColumn":29},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Drawer' is defined but never used.","'AddShoppingCartIcon' is defined but never used.","'Badge' is defined but never used.","'getTotalItems' is assigned a value but never used.","'handleRemoveFromCart' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]